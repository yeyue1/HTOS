name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install clang-tidy and cppcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy (Primary Check)
        continue-on-error: true
        run: |
          # 修复命令：正确传递文件列表给clang-tidy
          find kernel include -type f \( -name "*.c" -o -name "*.h" \) | \
          xargs -r clang-tidy \
            --checks='*,-llvmlibc-*,-altera-*,-fuchsia-*,-android-*,-darwin-*,-zircon-*,-abseil-*,-boost-*,-google-*,-hicpp-*,-modernize-*,-readability-identifier-length,-readability-magic-numbers,-cppcoreguidelines-avoid-magic-numbers,-cert-dcl37-c,-cert-dcl51-cpp' \
            --warnings-as-errors='' \
            -- -std=c11 \
            -Iinclude \
            -I/usr/include \
            -DSTM32F103xB \
            -D__GNUC__ || echo "clang-tidy completed with warnings"

      - name: Run cppcheck (Secondary Check)
        run: |
          cppcheck \
            --language=c --std=c11 \
            --enable=warning,style,performance,portability \
            --addon=misra \
            --inline-suppr \
            --suppress=misra-c2012-* \
            --suppress=unknownMacro \
            --template="{file}:{line}: [{severity}] {id} {message}" \
            --xml --xml-version=2 \
            -Iinclude \
            -DSTM32F103xB \
            include kernel 2> cppcheck-report.xml || true
          
          # 显示报告摘要
          if [ -f cppcheck-report.xml ]; then
            echo "Cppcheck analysis completed. Summary:"
            grep -c "<error" cppcheck-report.xml || echo "No errors found"
          fi

      - name: Upload analysis reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: |
            cppcheck-report.xml

  unit-test:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GCC and Make
        run: sudo apt-get update && sudo apt-get install -y gcc make

      - name: Build and Run Unit Tests
        run: |
          if [ -d tests ]; then
            cd tests
            make all || echo "Build failed"
            make test || echo "Tests failed"
          else
            echo "Tests directory not found, skipping unit tests"
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: tests/test_results.txt