name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install clang-tidy and cppcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck

      - name: Run clang-tidy (Primary Check)
        continue-on-error: true
        run: |
          find kernel include -type f \( -name "*.c" -o -name "*.h" \) -print0 | \
          xargs -0 --no-run-if-empty clang-tidy \
            --checks='*,-llvmlibc-*,-altera-*,-fuchsia-*' \
            -- -std=c11 -Iinclude

      - name: Run cppcheck (Secondary Check)
        run: |
          # 若有 compile_commands.json, 可使用 --project=compile_commands.json
          cppcheck \
            --language=c --std=c11 \
            --enable=warning,style,performance,portability \
            --addon=misra \
            --inline-suppr \
            --template="{file}:{line}: [{severity}] {id} {message}" \
            --xml --xml-version=2 \
            include kernel 2> cppcheck-report.xml || true
          cat cppcheck-report.xml

      - name: Upload analysis reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: |
            cppcheck-report.xml
            *.txt

  unit-test:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GCC and Make
        run: sudo apt-get update && sudo apt-get install -y gcc make

      - name: Build and Run Unit Tests
        run: |
          cd tests
          make all
          make test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: tests/test_results.txt